{"version":3,"sources":["components/bubbleSort.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","justifyContent","width","textTransform","margin","spacing","reducer","state","action","type","array","payload","iteration","sorted","speed","firstIndex","value","secondIndex","status","started","sortedIndex","BubbleSort","props","globalInterval","React","useRef","useReducer","items","dispatch","useEffect","current","clearTimeout","setTimeout","sort","length","k","classes","className","Button","variant","size","color","disabled","onClick","Array","from","Math","floor","random","Typography","Slider","defaultValue","onChangeCommitted","event","min","max","valueLabelDisplay","step","marks","map","item","index","style","height","unsortedArray","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bef17a15.chunk.js","sourcesContent":["import { Button, Slider, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { Action } from '../interfaces/action';\r\nimport { State } from '../interfaces/bubbleSort/bubbleSortInterface';\r\nimport { Item } from '../interfaces/item';\r\nimport { Props } from '../interfaces/props';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {          \r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            '& .speedContainer':{\r\n                width:300\r\n            },\r\n            '& > *': {\r\n                textTransform: 'none',\r\n                margin: theme.spacing(1)\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nconst init = (initArray: Item[]) => {\r\n    return { array: initArray, iteration: 0, sorted: 0, started: false, speed:50 } as State;\r\n}\r\nconst reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case 'setArray': {\r\n            return { ...state, array: action.payload.array, iteration: 0, sorted: 0 };\r\n        }\r\n        case 'setSpeed': {\r\n            return { ...state, speed: action.payload };\r\n        }\r\n        case 'swapeItems': {\r\n            const array = [...state.array];\r\n            if (array[action.payload.firstIndex].value > array[action.payload.secondIndex].value) {\r\n                [array[action.payload.firstIndex].value, array[action.payload.secondIndex].value] = [array[action.payload.secondIndex].value, array[action.payload.firstIndex].value];\r\n            }\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setArrayStatusCompare': {\r\n            const array = [...state.array];\r\n            array[action.payload.firstIndex].status = \"compare\";\r\n            array[action.payload.secondIndex].status = \"compare\";\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setArrayStatusUnsorted': {\r\n            const array = [...state.array];\r\n            array[action.payload.firstIndex].status = \"unsorted\";\r\n            array[action.payload.secondIndex].status = \"unsorted\";\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setStart':\r\n            return { ...state, started: action.payload };\r\n\r\n        case 'setIteration':\r\n            return { ...state, iteration: action.payload };\r\n\r\n        case 'setIterationAndSorted':\r\n            const array = [...state.array];\r\n            array[action.payload.sortedIndex].status = \"sorted\";\r\n            return { ...state, array: array, iteration: action.payload.iteration, sorted: action.payload.sorted };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst BubbleSort = (props: Props) => {\r\n    const globalInterval = React.useRef<NodeJS.Timeout>();\r\n    const [state, dispatch] = React.useReducer(reducer, init(props.items));\r\n\r\n    React.useEffect(() => {\r\n        if (state.started) {\r\n            if (!!globalInterval.current) {\r\n                clearTimeout(globalInterval.current);\r\n            }\r\n            globalInterval.current = setTimeout(sort, 150 - state.speed);\r\n        }\r\n    }, [state.iteration, state.started, state.speed]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch({ type: 'setArray', payload: { array: props.items } });\r\n\r\n    }, [props.items]);\r\n\r\n    const start = () => {\r\n        dispatch({ type: 'setStart', payload: true });\r\n    }\r\n\r\n    const pause = () => {\r\n        dispatch({ type: 'setStart', payload: false });\r\n\r\n        if (!!globalInterval.current) {\r\n            clearTimeout(globalInterval.current);\r\n        }\r\n    }\r\n\r\n    const sort = () => {\r\n        const { iteration, sorted, array } = state;\r\n\r\n        dispatch({ type: 'setArrayStatusUnsorted', payload: { firstIndex: iteration === 0 ? 0 : iteration - 1, secondIndex: iteration } });\r\n\r\n        if (iteration < array.length - sorted - 1) {\r\n            const k = iteration + 1;\r\n\r\n            dispatch({ type: 'setArrayStatusCompare', payload: { firstIndex: iteration, secondIndex: k } });\r\n\r\n            if (array[iteration].value > array[k].value) {\r\n                dispatch({ type: 'swapeItems', payload: { firstIndex: iteration, secondIndex: k } });\r\n\r\n            }\r\n            dispatch({ type: 'setIteration', payload: iteration + 1 });\r\n        }\r\n        else {\r\n            dispatch({ type: 'setIterationAndSorted', payload: { iteration: 0, sorted: sorted + 1, sortedIndex: iteration } });\r\n        }\r\n    }\r\n    const generateRandomArray = () => {\r\n        dispatch({ type: \"setArray\", payload: { array: Array.from({ length: 30 }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" })) } });\r\n    }\r\n    const changeSpeed = (event: React.ChangeEvent<{}>, value: number | number[]) => {\r\n        dispatch({ type: 'setSpeed', payload: value });\r\n        \r\n    }\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <section className={classes.root}>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" disabled={state.started} onClick={generateRandomArray}>Generate Random Array</Button>\r\n                {!state.started && <Button size=\"small\" variant=\"contained\" onClick={start}>Start</Button>}\r\n                {state.started && <Button size=\"small\" variant=\"contained\" onClick={pause}>Pause</Button>}\r\n                <div className=\"speedContainer\">\r\n                    <Typography>\r\n                        Speed\r\n                    </Typography>\r\n                    <Slider\r\n                        defaultValue={50}\r\n                        onChangeCommitted={changeSpeed}\r\n                        min={10}\r\n                        max={100}\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={10}\r\n                        marks />\r\n                </div>\r\n            </section>\r\n            <section className=\"chartContainer\">\r\n                {\r\n                    state.array.map((item, index) => {\r\n                        return (<div className={`pipe ${item.status}`} key={index} style={{ height: item.value + 'px' }}></div>);\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BubbleSort;","import './App.css';\nimport { Item } from './interfaces/item';\nimport BubbleSort from './components/bubbleSort';\nimport { Container } from '@material-ui/core';\n\nconst unsortedArray :Item[] = Array.from({ length: 30 }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" }));\n\nfunction App() {\n\n  return (\n    <Container className=\"App\">\n      <BubbleSort items={unsortedArray} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}