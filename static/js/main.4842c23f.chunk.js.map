{"version":3,"sources":["components/bubbleSort.tsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","array","payload","iteration","sorted","arrayCount","speed","firstIndex","value","secondIndex","status","started","sortedIndex","BubbleSort","props","globalInterval","React","useRef","useReducer","items","dispatch","useEffect","current","clearTimeout","setTimeout","sort","pause","length","k","Grid","container","justifyContent","alignItems","item","xs","sm","Box","component","mb","Button","variant","size","color","disabled","onClick","Array","from","Math","floor","random","Typography","Slider","defaultValue","onChangeCommitted","event","min","max","valueLabelDisplay","step","marks","className","map","index","style","height","unsortedArray","theme","createTheme","typography","button","textTransform","App","ThemeProvider","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4842c23f.chunk.js","sourcesContent":["import { Button, Slider, Typography, Grid, Box } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Action } from '../interfaces/action';\r\nimport { State } from '../interfaces/bubbleSort/bubbleSortInterface';\r\nimport { Item } from '../interfaces/item';\r\nimport { Props } from '../interfaces/props';\r\n\r\nconst init = (initArray: Item[]) => {\r\n    return { array: initArray, iteration: 0, sorted: 0, started: false, speed: 50, arrayCount: 30 } as State;\r\n}\r\nconst reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case 'setArray': {\r\n            return { ...state, array: action.payload.array, iteration: 0, sorted: 0 };\r\n        }\r\n        case 'setArrayCount': {\r\n            return { ...state, array: action.payload.array, arrayCount: action.payload.arrayCount, iteration: 0, sorted: 0 };\r\n        }\r\n        case 'setSpeed': {\r\n            return { ...state, speed: action.payload };\r\n        }\r\n        case 'swapeItems': {\r\n            const array = [...state.array];\r\n            if (array[action.payload.firstIndex].value > array[action.payload.secondIndex].value) {\r\n                [array[action.payload.firstIndex].value, array[action.payload.secondIndex].value] = [array[action.payload.secondIndex].value, array[action.payload.firstIndex].value];\r\n            }\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setArrayStatusCompare': {\r\n            const array = [...state.array];\r\n            array[action.payload.firstIndex].status = \"compare\";\r\n            array[action.payload.secondIndex].status = \"compare\";\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setArrayStatusUnsorted': {\r\n            const array = [...state.array];\r\n            array[action.payload.firstIndex].status = \"unsorted\";\r\n            array[action.payload.secondIndex].status = \"unsorted\";\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setStart':\r\n            return { ...state, started: action.payload };\r\n\r\n        case 'setIteration':\r\n            return { ...state, iteration: action.payload };\r\n\r\n        case 'setIterationAndSorted':\r\n            const array = [...state.array];\r\n            array[action.payload.sortedIndex].status = \"sorted\";\r\n            return { ...state, array: array, iteration: action.payload.iteration, sorted: action.payload.sorted };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst BubbleSort = (props: Props) => {\r\n    const globalInterval = React.useRef<NodeJS.Timeout>();\r\n    const [state, dispatch] = React.useReducer(reducer, init(props.items));\r\n\r\n    React.useEffect(() => {\r\n        if (state.started) {\r\n            if (!!globalInterval.current) {\r\n                clearTimeout(globalInterval.current);\r\n            }\r\n            globalInterval.current = setTimeout(sort, 150 - state.speed);\r\n        }\r\n    }, [state.iteration, state.started, state.speed]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch({ type: 'setArray', payload: { array: props.items } });\r\n\r\n    }, [props.items]);\r\n\r\n    const start = () => {\r\n        dispatch({ type: 'setStart', payload: true });\r\n    }\r\n\r\n    const pause = () => {\r\n        dispatch({ type: 'setStart', payload: false });\r\n\r\n        if (!!globalInterval.current) {\r\n            clearTimeout(globalInterval.current);\r\n        }\r\n    }\r\n\r\n    const sort = () => {\r\n        const { iteration, sorted, array } = state;\r\n\r\n        dispatch({ type: 'setArrayStatusUnsorted', payload: { firstIndex: iteration === 0 ? 0 : iteration - 1, secondIndex: iteration } });\r\n\r\n        if (iteration < array.length - sorted - 1) {\r\n            const k = iteration + 1;\r\n\r\n            dispatch({ type: 'setArrayStatusCompare', payload: { firstIndex: iteration, secondIndex: k } });\r\n\r\n            if (array[iteration].value > array[k].value) {\r\n                dispatch({ type: 'swapeItems', payload: { firstIndex: iteration, secondIndex: k } });\r\n\r\n            }\r\n            dispatch({ type: 'setIteration', payload: iteration + 1 });\r\n        }\r\n        else {\r\n            dispatch({ type: 'setIterationAndSorted', payload: { iteration: 0, sorted: sorted + 1, sortedIndex: iteration } });\r\n        }\r\n\r\n        if (sorted + 1 === array.length) {\r\n            pause();\r\n        }\r\n    }\r\n\r\n    const generateRandomArray = () => {\r\n        dispatch({ type: \"setArray\", payload: { array: Array.from({ length: state.arrayCount }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" })) } });\r\n    }\r\n\r\n    const changeArray = (event: React.ChangeEvent<{}>, value: number | number[]) => {\r\n        const arrayCount: number = typeof (value) === 'number' ? value : value[0];\r\n        dispatch({ type: \"setArrayCount\", payload: { array: Array.from({ length: arrayCount }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" })), arrayCount: arrayCount } });\r\n    }\r\n\r\n    const changeSpeed = (event: React.ChangeEvent<{}>, value: number | number[]) => {\r\n        dispatch({ type: 'setSpeed', payload: value });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} sm={6}>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <Box component=\"div\" mb={1}>\r\n                        <Button variant=\"contained\" size=\"small\" color=\"primary\" disabled={state.started} onClick={generateRandomArray}>Random Array</Button>\r\n                    </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                    <Box component=\"div\" mb={1}>\r\n                        {!state.started && <Button size=\"small\" variant=\"contained\" onClick={start}>Start</Button>}\r\n                        {state.started && <Button size=\"small\" variant=\"contained\" onClick={pause}>Pause</Button>}\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Box component=\"div\" mb={1}>\r\n                        <Typography>\r\n                            Speed\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={50}\r\n                            onChangeCommitted={changeSpeed}\r\n                            min={10}\r\n                            max={100}\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={10}\r\n                            marks />\r\n                    </Box>\r\n                    <Box component=\"div\" mb={1}>\r\n                        <Typography>\r\n                            Array\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={30}\r\n                            onChangeCommitted={changeArray}\r\n                            min={10}\r\n                            max={100}\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={10}\r\n                            marks />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <section className=\"chartContainer\">\r\n                {\r\n                    state.array.map((item, index) => {\r\n                        return (<div className={`pipe ${item.status}`} key={index} style={{ height: item.value + 'px' }}></div>);\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BubbleSort;","import './App.css';\nimport { Item } from './interfaces/item';\nimport BubbleSort from './components/bubbleSort';\nimport { Container } from '@material-ui/core';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst unsortedArray: Item[] = Array.from({ length: 30 }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" }));\n\nconst theme = createTheme({\n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container className=\"App\">\n        <BubbleSort items={unsortedArray} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}