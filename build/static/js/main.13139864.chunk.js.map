{"version":3,"sources":["components/bubbleSort.tsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","array","payload","iteration","sorted","firstIndex","value","secondIndex","status","started","sortedIndex","BubbleSort","props","globalInterval","React","useRef","useReducer","items","dispatch","useEffect","current","setTimeout","sort","length","k","className","disabled","onClick","Array","from","Math","floor","random","clearTimeout","map","item","index","style","height","unsortedArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13139864.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Action } from '../interfaces/action';\r\nimport { State } from '../interfaces/bubbleSort/bubbleSortInterface';\r\nimport { Item } from '../interfaces/item';\r\nimport { Props } from '../interfaces/props';\r\n\r\nconst init = (initArray: Item[]) => {\r\n    return { array: initArray, iteration: 0, sorted: 0, started: false } as State;\r\n}\r\nconst reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case 'setArray': {\r\n            return { ...state, array: action.payload.array, iteration: 0, sorted: 0 };\r\n        }\r\n        case 'swapeItems': {\r\n            const array = [...state.array];\r\n            if (array[action.payload.firstIndex].value > array[action.payload.secondIndex].value) {\r\n                [array[action.payload.firstIndex].value, array[action.payload.secondIndex].value] = [array[action.payload.secondIndex].value, array[action.payload.firstIndex].value];\r\n            }\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setArrayStatusCompare': {\r\n            const array = [...state.array];\r\n            array[action.payload.firstIndex].status = \"compare\";\r\n            array[action.payload.secondIndex].status = \"compare\";\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setArrayStatusUnsorted': {\r\n            const array = [...state.array];\r\n            array[action.payload.firstIndex].status = \"unsorted\";\r\n            array[action.payload.secondIndex].status = \"unsorted\";\r\n            return { ...state, array: array };\r\n        }\r\n\r\n        case 'setStart':\r\n            return { ...state, started: action.payload };\r\n\r\n        case 'setIteration':\r\n            return { ...state, iteration: action.payload };\r\n\r\n        case 'setIterationAndSorted':\r\n            const array = [...state.array];\r\n            array[action.payload.sortedIndex].status = \"sorted\";\r\n            return { ...state, array: array, iteration: action.payload.iteration, sorted: action.payload.sorted };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst BubbleSort = (props: Props) => {\r\n    const globalInterval = React.useRef<NodeJS.Timeout>();\r\n    const [state, dispatch] = React.useReducer(reducer, init(props.items));\r\n\r\n    React.useEffect(() => {\r\n        if (state.started) {\r\n            globalInterval.current = setTimeout(sort, 100);\r\n        }\r\n    }, [state.iteration, state.started]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch({ type: 'setArray', payload: { array: props.items } });\r\n\r\n    }, [props.items]);\r\n\r\n    const start = () => {\r\n        dispatch({ type: 'setStart', payload: true });\r\n    }\r\n\r\n    const pause = () => {\r\n        dispatch({ type: 'setStart', payload: false });\r\n\r\n        if (!!globalInterval.current) {\r\n            clearTimeout(globalInterval.current);\r\n        }\r\n    }\r\n\r\n    const sort = () => {\r\n        const { iteration, sorted, array } = state;\r\n\r\n        dispatch({ type: 'setArrayStatusUnsorted', payload: { firstIndex: iteration === 0 ? 0 : iteration - 1, secondIndex: iteration } });\r\n\r\n        if (iteration < array.length - sorted - 1) {\r\n            const k = iteration + 1;\r\n\r\n            dispatch({ type: 'setArrayStatusCompare', payload: { firstIndex: iteration, secondIndex: k } });\r\n\r\n            if (array[iteration].value > array[k].value) {\r\n                dispatch({ type: 'swapeItems', payload: { firstIndex: iteration, secondIndex: k } });\r\n\r\n            }\r\n            dispatch({ type: 'setIteration', payload: iteration + 1 });\r\n        }\r\n        else {\r\n            dispatch({ type: 'setIterationAndSorted', payload: { iteration: 0, sorted: sorted + 1, sortedIndex: iteration } });\r\n        }\r\n    }\r\n    const generateRandomArray = () => {\r\n        dispatch({ type: \"setArray\", payload: { array: Array.from({ length: 30 }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" })) } });\r\n    }\r\n    return (\r\n        <>\r\n            <section className=\"header\">\r\n                <button className=\"btn btn-primary btn-sm\" disabled={state.started} onClick={generateRandomArray}>Generate Random Array</button>\r\n                {!state.started && <button className=\"btn btn-secondary btn-sm\" onClick={start}>Start</button>}\r\n                {state.started && <button className=\"btn btn-secondary btn-sm\" onClick={pause}>Pause</button>}\r\n            </section>\r\n            <section className=\"chartContainer\">\r\n                {\r\n                    state.array.map((item, index) => {\r\n                        return (<div className={`pipe ${item.status}`} key={index} style={{ height: item.value + 'px' }}></div>);\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BubbleSort;","import './App.css';\nimport { Item } from './interfaces/item';\nimport BubbleSort from './components/bubbleSort';\n\nconst unsortedArray :Item[] = Array.from({ length: 30 }, () => ({ value: Math.floor(Math.random() * 300) + 10, status: \"unsorted\" }));\n\nfunction App() {\n\n  return (\n    <div className=\"App container-fluid\">\n      <BubbleSort items={unsortedArray} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}